(()=>{var t={281:function(t,e){var n,a;void 0===(a="function"==typeof(n=function(t){var e,n,a,o=window,i=document,s="appendChild",r="test",c=";text-shadow:",l="opacity:.",d=" 0px 0px ",m="3px 0px 5",h=")",u=function(t){for(n=i.getElementsByClassName(t||"microlight"),e=0;a=n[e++];)for(var u,p,v,g,y,f=a.textContent,w=0,L=f[0],b=1,C=a.innerHTML="",k=0,x=/(\d*\, \d*\, \d*)(, ([.\d]*))?/g.exec(o.getComputedStyle(a).color),E="px rgba("+x[1]+",",S=x[3]||1;p=u,u=7>k&&"\\"==u?1:b;){if(b=L,L=f[++w],g=C.length>1,!b||k>8&&"\n"==b||[/\S/[r](b),1,1,!/[$\w]/[r](b),("/"==u||"\n"==u)&&g,'"'==u&&g,"'"==u&&g,f[w-4]+p+u=="--\x3e",p+u=="*/"][k])for(C&&(a[s](y=i.createElement("span")).setAttribute("style",["",c+d+9+E+.7*S+"),"+d+2+E+.4*S+h,l+6+c+d+7+E+S/4+"),"+d+3+E+S/4+h,l+7+c+m+E+S/5+"),-"+m+E+S/5+h,"font-style:italic;"+l+5+c+m+E+S/4+"),-"+m+E+S/4+h][k?3>k?2:k>6?4:k>3?3:+/^(a(bstract|lias|nd|rguments|rray|s(m|sert)?|uto)|b(ase|egin|ool(ean)?|reak|yte)|c(ase|atch|har|hecked|lass|lone|ompl|onst|ontinue)|de(bugger|cimal|clare|f(ault|er)?|init|l(egate|ete)?)|do|double|e(cho|ls?if|lse(if)?|nd|nsure|num|vent|x(cept|ec|p(licit|ort)|te(nds|nsion|rn)))|f(allthrough|alse|inal(ly)?|ixed|loat|or(each)?|riend|rom|unc(tion)?)|global|goto|guard|i(f|mp(lements|licit|ort)|n(it|clude(_once)?|line|out|stanceof|t(erface|ernal)?)?|s)|l(ambda|et|ock|ong)|m(icrolight|odule|utable)|NaN|n(amespace|ative|ext|ew|il|ot|ull)|o(bject|perator|r|ut|verride)|p(ackage|arams|rivate|rotected|rotocol|ublic)|r(aise|e(adonly|do|f|gister|peat|quire(_once)?|scue|strict|try|turn))|s(byte|ealed|elf|hort|igned|izeof|tatic|tring|truct|ubscript|uper|ynchronized|witch)|t(emplate|hen|his|hrows?|ransient|rue|ry|ype(alias|def|id|name|of))|u(n(checked|def(ined)?|ion|less|signed|til)|se|sing)|v(ar|irtual|oid|olatile)|w(char_t|hen|here|hile|ith)|xor|yield)$/[r](C):0]),y[s](i.createTextNode(C))),v=k&&7>k?k:v,C="",k=11;![1,/[\/{}[(\-+*=<>:;|\\.,?!&@~]/[r](b),/[\])]/[r](b),/[$\w]/[r](b),"/"==b&&2>v&&"<"!=u,'"'==b,"'"==b,b+L+f[w+1]+f[w+2]=="\x3c!--",b+L=="/*",b+L=="//","#"==b][--k];);C+=b}};t.reset=u,"complete"==i.readyState?u():o.addEventListener("load",(function(){u()}),0)})?n.apply(e,[e]):n)||(t.exports=a)}},e={};function n(a){if(e[a])return e[a].exports;var o=e[a]={exports:{}};return t[a].call(o.exports,o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";var t=n(281),e=n.n(t);class a{constructor(){this.root=document.getElementById("root"),this.header=a.createElement("div","header"),this.title=a.createElement("h2"),this.description=a.createElement("div"),this.header.append(this.title,this.description),this.answerBlock=a.createElement("div","answer"),this.input=a.createElement("input","answer__input"),this.input.placeholder="Enter your answer",this.submitButton=a.createElement("button","answer__submit"),this.submitButton.textContent="Enter",this.answerBlock.append(this.input,this.submitButton),this.renderedBlock=a.createElement("div","level-render"),this.codeBlock=a.createElement("code","code"),this.codeText=a.createElement("pre"),this.codeText.classList.add("microlight"),this.codeBlock.append(this.codeText),this.levelsList=a.createElement("ul","levels-list"),(()=>{this.footer=a.createElement("footer","footer");const t=a.createElement("a","course-link"),e=a.createElement("img");e.src="./src/assets/img/rs_school_js.svg",t.href="https://rs.school/js/",t.append(e),t.target="_blank";const n=a.createElement("a");n.textContent="Mikhail Biltsevich",n.href="https://github.com/MikhailBiltsevich",n.target="_blank";const o=a.createElement("div");o.textContent="2020",this.footer.append(n,o,t)})(),this.root.append(this.header,this.answerBlock,this.renderedBlock,this.codeBlock,this.levelsList,this.footer)}static createElement(t,e){const n=document.createElement(t);return e&&n.classList.add(e),n}fillLevelsList(t){for(let e=0;e<t.length;e+=1){const n=a.createElement("li","levels-list__item"),o=t[e];o.isCompleted&&n.classList.add("completed"),n.dataset.id=o.id,n.textContent=o.title,this.levelsList.append(n)}}markAsCompleted(t){this.levelsList.querySelector(`[data-id='${t}']`).classList.add("completed")}showWrongAnswer(){const t="wrong-answer";this.answerBlock.classList.add(t),setTimeout((()=>{this.answerBlock.classList.remove(t)}),1e3)}setLevel(t){this.title.textContent=t.title,this.description.textContent=t.description,this.codeText.textContent=t.code,e().reset(),this.renderedBlock.innerHTML=t.code,this.renderedBlock.querySelectorAll(t.selector).forEach((t=>t.classList.add("animated"))),(()=>{const e="active",n=this.levelsList.querySelector(`[data-id='${t.id}']`);this.levelsList.querySelectorAll(".active").forEach((t=>t.classList.remove(e))),n.classList.add(e)})(),(()=>{this.input.value=""})()}bindCheckAnswer(t){const e=e=>{if("keydown"===e.type&&"Enter"!==e.code)return;const n=this.input.value;t(n)};this.input.addEventListener("keydown",e),this.submitButton.addEventListener("click",e)}bindLevelSelected(t){const e=e=>{const n=+e.target.dataset.id;t(n)};this.levelsList.querySelectorAll("li").forEach((t=>t.addEventListener("click",e)))}}const o=[{id:1,title:"London attractions",description:"You have to select all attractions",selector:"*",isCompleted:!1,code:'\n      <attraction name="london-eye"></attraction>\n      <attraction name="big-ben"></attraction>\n      <attraction name="tower-bridge"></attraction>\n      '},{id:2,title:"Just Big Ben",description:"You have to select only big-ben element",selector:'[name="big-ben"]',isCompleted:!1,code:'\n      <attraction name="big-ben"></attraction>\n      <attraction name="brandenburg-gate"></attraction>\n      '},{id:3,title:"Unique city",description:'You have to select element that have an id "stockholm-city"',selector:"#stockholm-city",isCompleted:!1,code:'\n      <city name="stockholm"></city>\n      <city name="stockholm" id="stockholm-city"></city>\n      <monument name="stonehenge"></monument>\n      '},{id:4,title:"State of Liberty",description:'You have to select element that have class "rotated"',selector:".rotated",isCompleted:!1,code:'\n      <attraction name="statue-of-liberty"></attraction>\n      <attraction name="statue-of-liberty" class="rotated"></attraction>\n      <attraction name="san-francisco"></attraction>\n      '},{id:5,title:"Rotated colesseum",description:"You have to select one element",selector:'[name="colosseum"].rotated',isCompleted:!1,code:'\n      <attraction name="gateway-arch" class="rotated"></attraction>\n      <attraction name="colosseum" class="rotated"></attraction>\n      <attraction name="colosseum"></attraction>\n      '},{id:6,title:"Attractions in the USA",description:"You have to select attractions inside <usa> element",selector:"usa attraction",isCompleted:!1,code:'\n      <usa>\n        <attraction name="san-francisco"></attraction>\n        <attraction name="statue-of-liberty"></attraction>\n        <monument name="washington-monument"></monument>\n      </usa>\n      <attraction name="san-francisco"></attraction>\n      <attraction name="washington-monument"></attraction>\n      '},{id:7,title:"Towers",description:"You have to select towers in Italy and Japan",selector:'italy [name$="tower"], japan [name$="tower"]',isCompleted:!1,code:'\n      <italy>\n        <attraction name="colosseum"></attraction>\n        <attraction name="pisa-tower"></pisa-tower>\n      </italy>\n      <france>\n        <attraction name="eiffel-tower"></attraction>\n        <attraction name="louvre"></louvre>\n      </france>\n      <japan>\n        <attraction name="fuji-mountain"></attraction>\n        <attraction name="tokyo-tower"></attraction>\n      </japan>\n      '},{id:8,title:"Similar endings of city names",description:'You have to select attractions that city name ends "n"',selector:'attraction[city$="n"]',isCompleted:!1,code:'\n      <attraction name="brandenburg-gate" city="berlin"></attraction>\n      <bridge name="tower-bridge" city="london"></bridge>\n      <attraction name="eiffel-tower" city="paris"></attraction>\n      <attraction name="big-ben" city="london"></attraction>\n      <attraction name="gherkin" city="london"></attraction>\n      '},{id:9,title:"Even attractions",description:"You have to select only even attractions",selector:"attraction:nth-child(2n)",isCompleted:!1,code:'\n        <attraction name="cn-tower"></attraction>\n        <attraction name="stonehenge"></attraction>   \n        <attraction name="fuji-mountain"></attraction>\n        <attraction name="tokyo-tower"></attraction>\n        <attraction name="christ-the-redeemer"></attraction>\n      '},{id:10,title:"Ancient",description:"You have to select not rotated attractions",selector:"attraction:not(.rotated)",isCompleted:!1,code:'\n      <attraction name="athena"></attraction>\n      <attraction name="wat-phra-kaew" class="rotated"></attraction>\n      <pyramid name="aztec-pyramid"></pyramid>\n      <attraction name="sphinx"></attraction>\n      <attraction name="wat-phra-kaew"></attraction>\n      '}],i={keys:{currentLevel:"currentLevel",completedLevels:"completedLevels"},setCurrentLevel(t){localStorage.setItem(this.keys.currentLevel,JSON.stringify(t))},getCurrentLevelId(){const t=localStorage.getItem(this.keys.currentLevel);return JSON.parse(t)},setCompletedLevelsId(t){localStorage.setItem(this.keys.completedLevels,JSON.stringify(t))},getCompletedLevels(){const t=localStorage.getItem(this.keys.completedLevels);return JSON.parse(t)}};new class{constructor(t,e){this.view=t,this.model=e,this.onInitialLoad(this.model.levels),this.view.bindCheckAnswer(this.handleCheckAnswer.bind(this)),this.view.bindLevelSelected(this.handleOnLevelClick.bind(this))}onInitialLoad(t){const e=this.model.getCompletedLevels();for(let n=0;n<t.length;n+=1){const a=t[n];a.isCompleted=e.includes(a.id)}this.view.fillLevelsList(t);const n=this.model.getCurrentLevel();this.view.setLevel(n)}handleCheckAnswer(t){const e=this.model.getCurrentLevel();t===e.selector?(this.model.setCompleted(e.id),this.view.markAsCompleted(e.id)):this.view.showWrongAnswer()}handleOnLevelClick(t){this.model.setCurrentLevel(t);const e=this.model.getCurrentLevel();this.view.setLevel(e)}}(new a,new class{constructor(){this.levels=o,this.remoteStorage=i}setCompleted(t){const e=this.remoteStorage.getCompletedLevels()||[];this.levels.find((e=>e.id===t)).isCompleted=!0,e.includes(t)||e.push(t),this.remoteStorage.setCompletedLevelsId(e)}getCurrentLevel(){const t=this.remoteStorage.getCurrentLevelId();return"number"==typeof t?this.levels.find((e=>e.id===t)):this.levels[0]}getCompletedLevels(){return this.remoteStorage.getCompletedLevels()||[]}setCurrentLevel(t){this.remoteStorage.setCurrentLevel(t)}})})()})();